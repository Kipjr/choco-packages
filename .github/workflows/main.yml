
on: 
  workflow_dispatch:
    #manual - just for testing
  pull_request:
    branches:
      - master
    #manual - just for testing
  release: 
    types: [published]
    #if test succeeded, then push to repo
    
jobs:
  test:
    runs-on: windows-2022
    environment: production
    steps:
      - name: Checkout
        uses: actions/checkout@v2  
        
      - name: Install Choco
        run: |
           if(test-path -path "C:\ProgramData\chocolatey\choco.exe"){Write-Output "Choco is already installed"} else {
             [System.Net.ServicePointManager]::SecurityProtocol = [System.Net.ServicePointManager]::SecurityProtocol -bor 3072
             Invoke-Expression ((New-Object System.Net.WebClient).DownloadString('https://community.chocolatey.org/install.ps1'))
           }
        
      - name: GetPackages
        id: packages
        run: |
            $packages = Get-ChildItem -path . -recurse -Filter '*.nuspec' |Select-Object -ExpandProperty fullname
            $data = $packages | foreach-object {
                $path=$_
                [xml]$c=get-content $_ 
                $c.package.metadata |Select-Object -property id,version,@{n="pre";e={ $($_.version -match '-(open|beta|alpha|rc|preview|final)[0-9]*$' ) }}, @{n="repo";e={ $((choco search $($_.id) --version=$($_.version) --exact --detailed --pre --allowunofficial --limitoutput) | Measure-Object -line | Select-Object -expandproperty Lines  ) -eq 1  }}, @{n="path";e={$path}} 
            }
            $chocopackages=$data |ConvertTo-Json -Compress
            Write-Output "CHOCO_PACKAGES=$($chocopackages)" | Out-File -FilePath $Env:GITHUB_ENV -Encoding utf8 -Append

      - name: Choco Pack
        id: chocopack        
        env:
          CHOCO_PACKAGES: ${{ env.CHOCO_PACKAGES }}        
        run: |
           '${{ env.CHOCO_PACKAGES }}' |ConvertFrom-Json | foreach-object { choco pack $_.path }
           
 
      - name: Choco Install
        id: chocoinstall
        env:
          CHOCO_PACKAGES: ${{ env.CHOCO_PACKAGES }}     
        run: |
        '${{ env.CHOCO_PACKAGES }}' |ConvertFrom-Json | foreach-object { choco install -s . $_.id $(if($_.pre){" --pre"}) }
           
           
      - name: Choco uninstall
        id: chocouninstall
        env:
          CHOCO_PACKAGES: ${{ env.CHOCO_PACKAGES }}         
        run: |
        '${{ env.CHOCO_PACKAGES }}' |ConvertFrom-Json | foreach-object { choco uninstall $_.id }
  push:
    needs: test
    runs-on: windows-2022
    if: github.event_name == 'release'
    environment: production
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        
      - name: Install Choco
        run: |
           if(test-path -path "C:\ProgramData\chocolatey\choco.exe"){write-output "Choco is already installed"} else {
             [System.Net.ServicePointManager]::SecurityProtocol = [System.Net.ServicePointManager]::SecurityProtocol -bor 3072
             Invoke-Expression ((New-Object System.Net.WebClient).DownloadString('https://community.chocolatey.org/install.ps1'))
           }
        
      - name: SetAPIKey
        run: | 
          choco apikey --key CHOCO_API_KEY --source CHOCO_SRC_URL        
      
      - name: GetPackages
        id: packages
        run: |
            $packages = Get-ChildItem -path . -recurse -Filter '*.nuspec' |Select-Object -ExpandProperty fullname
            $data = $packages | foreach-object {
                $path=$_
                [xml]$c=get-content $_ 
                $c.package.metadata |Select-Object -property id,version,@{n="pre";e={ $($_.version -match '-(open|beta|alpha|rc|preview|final)[0-9]*$' ) }}, @{n="repo";e={ $((choco search $($_.id) --version=$($_.version) --exact --detailed --pre --allowunofficial --limitoutput) | Measure-Object -line | Select-Object -expandproperty Lines  ) -eq 1  }}, @{n="path";e={$path}} 
            }
            $chocopackages=$data |ConvertTo-Json -Compress
            Write-Output "CHOCO_PACKAGES=$($chocopackages)" | Out-File -FilePath $Env:GITHUB_ENV -Encoding utf8 -Append

      
      - name: Choco Pack & Push
        id: chocopackpush        
        env:
          CHOCO_PACKAGES: ${{ env.CHOCO_PACKAGES }}        
        run: |
        '${{ env.CHOCO_PACKAGES }}' |ConvertFrom-Json | Where-Object {$_.repo -eq $false}  | foreach-object { choco pack $_.path; choco push --source CHOCO_SRC_URL; remove-item *.nupkg }
 
